{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/hooks/useGatsby.ts"],"names":["Main","styled","div","IndexPage","React","memo","data","allMarkdownRemark","edges","map","edge","node","console","log","title","className","href"],"mappings":"wpBAQA,IAAMA,EAAOC,IAAOC,IAAV,KAMJC,EAAYC,IAAMC,MAAK,WAC3B,IAAMC,ECLQ,OAiBDC,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAAeA,EAAKC,QDV7D,OADAC,QAAQC,IAAIP,GAEV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKQ,MAAM,SACX,kBAACd,EAAD,CAAMe,UAAU,QACd,6BACE,0CACA,qDACwB,uBAAGC,KAAK,wBAAR,aAExB,0FAWKb","file":"component---src-pages-index-tsx-cfe04cd0da1f92e18732.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\n\nimport { Layout, Image, SEO } from \"../components\";\n\nimport { usePosts } from \"../hooks/useGatsby\";\n\nconst Main = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nconst IndexPage = React.memo(() => {\n  const data = usePosts();\n  console.log(data);\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Main className=\"test\">\n        <div>\n          <h1>Yunhwan Na</h1>\n          <h2>\n            Front-End engineer at <a href=\"https://sendbird.com\">Sendbird</a>\n          </h2>\n          <p>I've studied Computer science and Design engineering </p>\n        </div>\n        {/* {data.map(post => (\n          <div key={post.id}>{post.frontmatter.title}</div>\n        ))}\n        <Link to=\"/page-2/\">Go to page 2</Link> */}\n      </Main>\n    </Layout>\n  );\n});\n\nexport default IndexPage;\n","import { useStaticQuery, graphql } from \"gatsby\";\n\ntype Post = {\n  id: string;\n  html: string;\n  frontmatter: {\n    title: string;\n  };\n};\nexport const usePosts = () => {\n  const posts = useStaticQuery(\n    graphql`\n      {\n        allMarkdownRemark {\n          edges {\n            node {\n              id\n              html\n              frontmatter {\n                title\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n  return posts.allMarkdownRemark.edges.map((edge: any) => edge.node) as Post[];\n};\n"],"sourceRoot":""}